-- Hook bypass
local v = require(game:GetService("StarterPlayer").StarterPlayerScripts["TSFL Client"].Modules.BallNetworking)
local x = require(game:GetService("Players").LocalPlayer.PlayerScripts["TSFL Client"].Modules.BallNetworking)

hookfunction(x.IsDistanceTooBig, function() return false end)
hookfunction(v.IsDistanceTooBig, function() return false end)
hookfunction(x.VerifyHit, function() return false end)
hookfunction(v.VerifyHit, function() return false end)
hookfunction(x.IsBallBoundingHitbox, function() return true end)
hookfunction(v.IsBallBoundingHitbox, function() return true end)

-- Get balls
local function isUUID(str)
    return string.match(str, "^%x%x%x%x%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%x%x%x%x%x%x%x%x$") ~= nil
end
local function getBalls()
    local ballsFolder = workspace:FindFirstChild("Balls")
    if not ballsFolder then return {} end
    local result = {}
    for _, part in pairs(ballsFolder:GetDescendants()) do
        if part:IsA("BasePart") and isUUID(part.Name) then
            table.insert(result, part)
        end
    end
    return result
end

-- Variables
local player = game.Players.LocalPlayer
local runService = game:GetService("RunService")
local userInput = game:GetService("UserInputService")
local reach = 15
local maxReach = 125
local reachEnabled = true

-- Create GUI
local gui = Instance.new("ScreenGui", game:GetService("CoreGui"))
gui.Name = "ReachGUI"
gui.ResetOnSpawn = false

-- Open Button
local openBtn = Instance.new("TextButton", gui)
openBtn.Size = UDim2.new(0, 100, 0, 40)
openBtn.Position = UDim2.new(0, 20, 0, 20)
openBtn.Text = "Open"
openBtn.TextScaled = true
openBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
openBtn.TextColor3 = Color3.new(1, 1, 1)
openBtn.Visible = false

-- Main Frame
local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 300, 0, 180)
frame.Position = UDim2.new(0.5, -150, 0.5, -100)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Active = true

local corner = Instance.new("UICorner", frame)
corner.CornerRadius = UDim.new(0, 8)

-- Title bar (drags whole frame)
local titleBar = Instance.new("Frame", frame)
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundTransparency = 1
titleBar.Name = "TitleBar"
titleBar.Active = true

-- Title label
local title = Instance.new("TextLabel", titleBar)
title.Text = "Reach Controller"
title.Size = UDim2.new(1, 0, 1, 0)
title.TextColor3 = Color3.new(1, 1, 1)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextScaled = true

-- Drag logic
local dragging = false
local dragStart, startPos

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
    end
end)

userInput.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

userInput.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

-- Close Button
local closeBtn = Instance.new("TextButton", frame)
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -35, 0, 5)
closeBtn.Text = "‚ùå"
closeBtn.TextScaled = true
closeBtn.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
closeBtn.TextColor3 = Color3.new(1, 1, 1)

-- Toggle Button
local toggle = Instance.new("TextButton", frame)
toggle.Size = UDim2.new(0, 260, 0, 30)
toggle.Position = UDim2.new(0, 20, 0, 40)
toggle.Text = "Reach: ON"
toggle.TextScaled = true
toggle.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
toggle.TextColor3 = Color3.new(1, 1, 1)

toggle.MouseButton1Click:Connect(function()
    reachEnabled = not reachEnabled
    toggle.Text = "Reach: " .. (reachEnabled and "ON" or "OFF")
end)

-- Slider background
local sliderBack = Instance.new("Frame", frame)
sliderBack.Size = UDim2.new(0, 260, 0, 6)
sliderBack.Position = UDim2.new(0, 20, 0, 85)
sliderBack.BackgroundColor3 = Color3.fromRGB(100, 100, 100)

-- Slider drag
local sliderDrag = Instance.new("Frame", sliderBack)
sliderDrag.Size = UDim2.new((reach / maxReach), 0, 1, 0)
sliderDrag.BackgroundColor3 = Color3.fromRGB(0, 170, 255)

-- Slider value label
local valueLabel = Instance.new("TextLabel", frame)
valueLabel.Size = UDim2.new(0, 260, 0, 25)
valueLabel.Position = UDim2.new(0, 20, 0, 100)
valueLabel.BackgroundTransparency = 1
valueLabel.Text = "Reach: " .. tostring(reach)
valueLabel.TextScaled = true
valueLabel.TextColor3 = Color3.new(1, 1, 1)

-- Slider dragging logic
local sliderDragging = false

sliderBack.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        sliderDragging = true
        local rel = input.Position.X - sliderBack.AbsolutePosition.X
        local pct = math.clamp(rel / sliderBack.AbsoluteSize.X, 0, 1)
        reach = math.floor(pct * maxReach)
        valueLabel.Text = "Reach: " .. tostring(reach)
        sliderDrag.Size = UDim2.new(pct, 0, 1, 0)
    end
end)

userInput.InputChanged:Connect(function(input)
    if sliderDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local rel = input.Position.X - sliderBack.AbsolutePosition.X
        local pct = math.clamp(rel / sliderBack.AbsoluteSize.X, 0, 1)
        reach = math.floor(pct * maxReach)
        valueLabel.Text = "Reach: " .. tostring(reach)
        sliderDrag.Size = UDim2.new(pct, 0, 1, 0)
    end
end)

userInput.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        sliderDragging = false
    end
end)

-- Close/Open logic
closeBtn.MouseButton1Click:Connect(function()
    frame.Visible = false
    openBtn.Visible = true
end)
openBtn.MouseButton1Click:Connect(function()
    frame.Visible = true
    openBtn.Visible = false
end)

-- Reach touch logic
runService.RenderStepped:Connect(function()
    if not reachEnabled then return end

    local char = player.Character
    if not char then return end

    local parts = {"Right Leg", "Left Leg", "Torso", "Head"}
    local balls = getBalls()

    for _, partName in pairs(parts) do
        local part = char:FindFirstChild(partName)
        if part then
            for _, ti in pairs(part:GetDescendants()) do
                if ti:IsA("TouchTransmitter") or ti.Name == "TouchInterest" then
                    for _, ball in pairs(balls) do
                        if (ball.Position - part.Position).Magnitude <= reach then
                            pcall(function()
                                firetouchinterest(ball, ti.Parent, 0)
                                firetouchinterest(ball, ti.Parent, 1)
                            end)
                        end
                    end
                end
            end
        end
    end
end)
