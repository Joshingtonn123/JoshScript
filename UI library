-- Syrex UI Library with Tabs, Buttons, Toggles, Sliders, and Keybinds

if game.CoreGui:FindFirstChild("SyrexUILib") then
    game.CoreGui.SyrexUILib:Destroy()
end

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Theme
local Theme = {
    Background = Color3.fromRGB(9,9,13),
    Section = Color3.fromRGB(0,20,40),
    Element = Color3.fromRGB(61,133,224),
    Text = Color3.fromRGB(255,255,255),
}

-- Settings
local Settings = {
    CloseBind = Enum.KeyCode.RightControl,
}

-- WalkSpeed vars
local SpeedEnabled = false
local SpeedValue = 16

-- Draggable function
local function MakeDraggable(topbar, frame)
    local Dragging, DragInput, DragStart, StartPos
    local function Update(input)
        local Delta = input.Position - DragStart
        local Pos = UDim2.new(
            StartPos.X.Scale,
            StartPos.X.Offset + Delta.X,
            StartPos.Y.Scale,
            StartPos.Y.Offset + Delta.Y
        )
        TweenService:Create(frame, TweenInfo.new(0.12), {Position = Pos}):Play()
    end
    topbar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            Dragging = true
            DragStart = input.Position
            StartPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    Dragging = false
                end
            end)
        end
    end)
    topbar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            DragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == DragInput and Dragging then
            Update(input)
        end
    end)
end

-- ScreenGui
local Gui = Instance.new("ScreenGui")
Gui.Name = "SyrexUILib"
Gui.Parent = CoreGui
Gui.ResetOnSpawn = false

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 520, 0, 340)
MainFrame.Position = UDim2.new(0.5, -260, 0.5, -170)
MainFrame.BackgroundColor3 = Theme.Background
MainFrame.Active = true
MainFrame.Parent = Gui
Instance.new("UICorner", MainFrame).CornerRadius = UDim.new(0,6)

-- TopBar
local TopBar = Instance.new("Frame", MainFrame)
TopBar.Size = UDim2.new(1,0,0,34)
TopBar.BackgroundTransparency = 1

local Title = Instance.new("TextLabel", TopBar)
Title.Size = UDim2.new(1,-80,1,0)
Title.Position = UDim2.new(0,12,0,0)
Title.BackgroundTransparency = 1
Title.Font = Enum.Font.FredokaOne
Title.Text = "Syrex UI Library"
Title.TextColor3 = Theme.Text
Title.TextSize = 20
Title.TextXAlignment = Enum.TextXAlignment.Left

local CloseBtn = Instance.new("TextButton", TopBar)
CloseBtn.Size = UDim2.new(0,60,0,24)
CloseBtn.Position = UDim2.new(1,-70,0,5)
CloseBtn.BackgroundColor3 = Theme.Section
CloseBtn.Text = "Close"
CloseBtn.Font = Enum.Font.SourceSansBold
CloseBtn.TextColor3 = Theme.Text
CloseBtn.TextSize = 14
Instance.new("UICorner", CloseBtn).CornerRadius = UDim.new(0,6)

local MinBtn = Instance.new("TextButton", TopBar)
MinBtn.Size = UDim2.new(0,40,0,24)
MinBtn.Position = UDim2.new(1,-120,0,5)
MinBtn.BackgroundColor3 = Theme.Section
MinBtn.Text = "-"
MinBtn.Font = Enum.Font.SourceSansBold
MinBtn.TextColor3 = Theme.Text
MinBtn.TextSize = 18
Instance.new("UICorner", MinBtn).CornerRadius = UDim.new(0,6)

-- Content Frame
local Content = Instance.new("Frame", MainFrame)
Content.Position = UDim2.new(0,12,0,44)
Content.Size = UDim2.new(1,-24,1,-56)
Content.BackgroundTransparency = 1

-- Tab System
local Tabs = {}

function Tabs:createTab(name)
    local TabContent = Instance.new("Frame", Content)
    TabContent.Size = UDim2.new(1,0,1,0)
    TabContent.BackgroundTransparency = 1
    TabContent.Visible = true
    TabContent.LayoutOrder = #Content:GetChildren()

    -- Helper functions
    function TabContent:createButton(text, callback)
        local Btn = Instance.new("TextButton", self)
        Btn.Size = UDim2.new(0.9,0,0,36)
        Btn.Position = UDim2.new(0,0,0,#self:GetChildren()*40)
        Btn.BackgroundColor3 = Theme.Section
        Btn.Font = Enum.Font.SourceSansBold
        Btn.TextColor3 = Theme.Text
        Btn.TextSize = 18
        Btn.Text = text
        Instance.new("UICorner", Btn).CornerRadius = UDim.new(0,6)
        Btn.MouseButton1Click:Connect(callback)
    end

    function TabContent:createToggle(text, default, callback)
        local Tog = Instance.new("TextButton", self)
        Tog.Size = UDim2.new(0.9,0,0,36)
        Tog.Position = UDim2.new(0,0,0,#self:GetChildren()*40)
        Tog.BackgroundColor3 = default and Theme.Element or Theme.Section
        Tog.Font = Enum.Font.SourceSansBold
        Tog.TextColor3 = Theme.Text
        Tog.TextSize = 18
        Tog.Text = text .. ": " .. (default and "ON" or "OFF")
        Instance.new("UICorner", Tog).CornerRadius = UDim.new(0,6)

        local state = default
        Tog.MouseButton1Click:Connect(function()
            state = not state
            Tog.BackgroundColor3 = state and Theme.Element or Theme.Section
            Tog.Text = text .. ": " .. (state and "ON" or "OFF")
            callback(state)
        end)
    end

    function TabContent:createSlider(text, default, callback)
        local SliderFrame = Instance.new("Frame", self)
        SliderFrame.Size = UDim2.new(0.9,0,0,32)
        SliderFrame.Position = UDim2.new(0,0,0,#self:GetChildren()*40)
        SliderFrame.BackgroundTransparency = 1

        local Bar = Instance.new("Frame", SliderFrame)
        Bar.Size = UDim2.new(default,0,0,8)
        Bar.Position = UDim2.new(0,0,0.5,-4)
        Bar.BackgroundColor3 = Theme.Section
        Instance.new("UICorner", Bar).CornerRadius = UDim.new(1,0)

        local Fill = Instance.new("Frame", Bar)
        Fill.Size = UDim2.new(default,0,1,0)
        Fill.BackgroundColor3 = Theme.Element
        Instance.new("UICorner", Fill).CornerRadius = UDim.new(1,0)

        local dragging = false
        Bar.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
            end
        end)
        Bar.InputEnded:Connect(function(input) dragging = false end)
        UserInputService.InputChanged:Connect(function(input)
            if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                local relX = math.clamp((input.Position.X - Bar.AbsolutePosition.X) / Bar.AbsoluteSize.X, 0, 1)
                Fill.Size = UDim2.new(relX,0,1,0)
                callback(relX)
            end
        end)
    end

    function TabContent:createKeybind(text, defaultKey, callback)
        local KeybindFrame = Instance.new("Frame", self)
        KeybindFrame.Size = UDim2.new(0.9,0,0,36)
        KeybindFrame.Position = UDim2.new(0,0,0,#self:GetChildren()*40)
        KeybindFrame.BackgroundTransparency = 1

        local Label = Instance.new("TextLabel", KeybindFrame)
        Label.Size = UDim2.new(0.6,0,1,0)
        Label.Position = UDim2.new(0,0,0,0)
        Label.BackgroundTransparency = 1
        Label.Text = text .. ": " .. tostring(defaultKey)
        Label.TextColor3 = Theme.Text
        Label.Font = Enum.Font.SourceSans
        Label.TextSize = 14
        Label.TextXAlignment = Enum.TextXAlignment.Left

        local Btn = Instance.new("TextButton", KeybindFrame)
        Btn.Size = UDim2.new(0.36,0,1,0)
        Btn.Position = UDim2.new(0.62,0,0,0)
        Btn.BackgroundColor3 = Theme.Element
        Btn.TextColor3 = Theme.Text
        Btn.Font = Enum.Font.SourceSansBold
        Btn.Text = "Set Key"
        Instance.new("UICorner", Btn).CornerRadius = UDim.new(0,6)

        local Key = defaultKey

        Btn.MouseButton1Click:Connect(function()
            Btn.Text = "Press a key..."
            local conn
            conn = UserInputService.InputBegan:Connect(function(input, gp)
                if gp then return end
                if input.UserInputType == Enum.UserInputType.Keyboard then
                    Key = input.KeyCode
                    Btn.Text = "Set Key"
                    Label.Text = text .. ": " .. tostring(Key)
                    conn:Disconnect()
                end
            end)
        end)

        -- Listen for key press
        UserInputService.InputBegan:Connect(function(input, gp)
            if gp then return end
            if input.KeyCode == Key then
                callback()
            end
        end)
    end

    return TabContent
end

-- Example Usage
local Tab1 = Tabs:createTab("Main")

-- Add button
Tab1:createButton("Load Infinite Yield", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

-- Add toggle
Tab1:createToggle("WalkSpeed", false, function(state)
    SpeedEnabled = state
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
        LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = state and SpeedValue or 16
    end
end)

-- Add slider
Tab1:createSlider("WalkSpeed Value", 0.5, function(value)
    SpeedValue = math.floor(value*100)
    if SpeedEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
        LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = SpeedValue
    end
end)

-- **GUI Toggle Keybind (works perfectly)**
local GuiKey = Settings.CloseBind
UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == GuiKey then
        Gui.Enabled = not Gui.Enabled
    end
end)

-- Close / Minimize buttons
CloseBtn.MouseButton1Click:Connect(function()
    Gui.Enabled = false
end)

local minimized = false
MinBtn.MouseButton1Click:Connect(function()
    minimized = not minimized
    Content.Visible = not minimized
    MainFrame.Size = minimized and UDim2.new(0,260,0,34) or UDim2.new(0,520,0,340)
end)

-- Make draggable
MakeDraggable(TopBar, MainFrame)
