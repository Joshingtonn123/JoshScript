-- Syrex UI Library - Library Version

if game.CoreGui:FindFirstChild("SyrexUILib") then
    game.CoreGui.SyrexUILib:Destroy()
end

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local Syrex = {}
Syrex.__index = Syrex

-- Theme
Syrex.Theme = {
    Background = Color3.fromRGB(9,9,13),
    Section = Color3.fromRGB(0,20,40),
    Element = Color3.fromRGB(61,133,224),
    Text = Color3.fromRGB(255,255,255),
}

-- Settings
Syrex.Settings = {
    CloseBind = Enum.KeyCode.RightControl
}

-- Draggable function
local function MakeDraggable(topbar, frame)
    local Dragging, DragInput, DragStart, StartPos
    local function Update(input)
        local Delta = input.Position - DragStart
        local Pos = UDim2.new(
            StartPos.X.Scale,
            StartPos.X.Offset + Delta.X,
            StartPos.Y.Scale,
            StartPos.Y.Offset + Delta.Y
        )
        TweenService:Create(frame, TweenInfo.new(0.12), {Position = Pos}):Play()
    end
    topbar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            Dragging = true
            DragStart = input.Position
            StartPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    Dragging = false
                end
            end)
        end
    end)
    topbar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            DragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == DragInput and Dragging then
            Update(input)
        end
    end)
end

-- Create Window
function Syrex:CreateWindow(title)
    local selfWindow = {}

    local Gui = Instance.new("ScreenGui")
    Gui.Name = "SyrexUILib"
    Gui.Parent = CoreGui
    Gui.ResetOnSpawn = false
    selfWindow.Gui = Gui

    -- Main Frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 520, 0, 340)
    MainFrame.Position = UDim2.new(0.5, -260, 0.5, -170)
    MainFrame.BackgroundColor3 = self.Theme.Background
    MainFrame.Active = true
    MainFrame.Parent = Gui
    Instance.new("UICorner", MainFrame).CornerRadius = UDim.new(0,6)
    selfWindow.MainFrame = MainFrame

    -- TopBar
    local TopBar = Instance.new("Frame", MainFrame)
    TopBar.Size = UDim2.new(1,0,0,34)
    TopBar.BackgroundTransparency = 1

    local TitleLabel = Instance.new("TextLabel", TopBar)
    TitleLabel.Size = UDim2.new(1,-80,1,0)
    TitleLabel.Position = UDim2.new(0,12,0,0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Font = Enum.Font.FredokaOne
    TitleLabel.Text = title or "Syrex UI Library"
    TitleLabel.TextColor3 = self.Theme.Text
    TitleLabel.TextSize = 20
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left

    -- Close Button
    local CloseBtn = Instance.new("TextButton", TopBar)
    CloseBtn.Size = UDim2.new(0,60,0,24)
    CloseBtn.Position = UDim2.new(1,-70,0,5)
    CloseBtn.BackgroundColor3 = self.Theme.Section
    CloseBtn.Text = "Close"
    CloseBtn.Font = Enum.Font.SourceSansBold
    CloseBtn.TextColor3 = self.Theme.Text
    CloseBtn.TextSize = 14
    Instance.new("UICorner", CloseBtn).CornerRadius = UDim.new(0,6)

    -- Minimize Button
    local MinBtn = Instance.new("TextButton", TopBar)
    MinBtn.Size = UDim2.new(0,40,0,24)
    MinBtn.Position = UDim2.new(1,-120,0,5)
    MinBtn.BackgroundColor3 = self.Theme.Section
    MinBtn.Text = "-"
    MinBtn.Font = Enum.Font.SourceSansBold
    MinBtn.TextColor3 = self.Theme.Text
    MinBtn.TextSize = 18
    Instance.new("UICorner", MinBtn).CornerRadius = UDim.new(0,6)

    -- Content container
    local ContentFrames = {}

    -- Tab Frame
    local TabFrame = Instance.new("Frame")
    TabFrame.Size = UDim2.new(0, 100, 0, 340)
    TabFrame.Position = UDim2.new(0.5, -370, 0.5, -170)
    TabFrame.BackgroundColor3 = self.Theme.Background
    TabFrame.Parent = Gui
    Instance.new("UICorner", TabFrame).CornerRadius = UDim.new(0,6)

    local tabs = {}
    local independent = false
    local defaultOffset = Vector2.new(-110, 0)
    local function getOffset()
        return Vector2.new(
            TabFrame.AbsolutePosition.X - MainFrame.AbsolutePosition.X,
            TabFrame.AbsolutePosition.Y - MainFrame.AbsolutePosition.Y
        )
    end
    local tabOffset = getOffset()
    RunService.RenderStepped:Connect(function()
        if not independent then
            local newPos = Vector2.new(
                MainFrame.AbsolutePosition.X + tabOffset.X,
                MainFrame.AbsolutePosition.Y + tabOffset.Y
            )
            TabFrame.Position = UDim2.fromOffset(newPos.X, newPos.Y)
        end
    end)
    TabFrame:GetPropertyChangedSignal("Position"):Connect(function()
        if independent then
            tabOffset = getOffset()
        end
    end)
    TabFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            independent = true
        end
    end)
    local lastClick = 0
    TabFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            local now = tick()
            if now - lastClick < 0.3 then
                independent = false
                tabOffset = defaultOffset
            end
            lastClick = now
        end
    end)

    -- Make draggable
    MakeDraggable(TopBar, MainFrame)
    MakeDraggable(TabFrame, TabFrame)

    -- Buttons
    local minimized = false
    CloseBtn.MouseButton1Click:Connect(function()
        Gui.Enabled = false
    end)
    MinBtn.MouseButton1Click:Connect(function()
        minimized = not minimized
        for _,f in pairs(ContentFrames) do
            f.Visible = not minimized
        end
        MainFrame.Size = minimized and UDim2.new(0,260,0,34) or UDim2.new(0,520,0,340)
    end)

    -- Toggle GUI with keybind
    UserInputService.InputBegan:Connect(function(input, gp)
        if gp then return end
        if input.KeyCode == Syrex.Settings.CloseBind then
            Gui.Enabled = not Gui.Enabled
        end
    end)

    function selfWindow:CreateTab(name)
        local tabContent = Instance.new("Frame", MainFrame)
        tabContent.Size = UDim2.new(1,-24,1,-56)
        tabContent.Position = UDim2.new(0,12,0,44)
        tabContent.BackgroundTransparency = 1
        tabContent.Visible = #tabs==0 and true or false
        table.insert(ContentFrames, tabContent)

        local tabButton = Instance.new("TextButton", TabFrame)
        tabButton.Size = UDim2.new(1, -10, 0, 40)
        tabButton.Position = UDim2.new(0,5,0,20 + (#tabs*50))
        tabButton.BackgroundColor3 = self.Theme.Section
        tabButton.Text = name or ("Tab "..(#tabs+1))
        tabButton.Font = Enum.Font.SourceSansBold
        tabButton.TextColor3 = self.Theme.Text
        tabButton.TextSize = 16
        Instance.new("UICorner", tabButton).CornerRadius = UDim.new(0,6)

        tabButton.MouseButton1Click:Connect(function()
            for i,t in pairs(ContentFrames) do
                t.Visible = false
                tabs[i].Button.BackgroundColor3 = Syrex.Theme.Section
            end
            tabContent.Visible = true
            tabButton.BackgroundColor3 = Syrex.Theme.Element
        end)

        table.insert(tabs, {Button = tabButton, Frame = tabContent})

        if #tabs==1 then
            tabButton.BackgroundColor3 = Syrex.Theme.Element
        end

        local tabObj = {}
        function tabObj:AddButton(text, callback)
            local btn = Instance.new("TextButton", tabContent)
            btn.Size = UDim2.new(0.9,0,0,36)
            btn.Position = UDim2.new(0,0,0,36*(#tabContent:GetChildren()))
            btn.BackgroundColor3 = Syrex.Theme.Section
            btn.Font = Enum.Font.SourceSansBold
            btn.TextColor3 = Syrex.Theme.Text
            btn.TextSize = 18
            btn.Text = text
            Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)
            btn.MouseButton1Click:Connect(callback)
            return btn
        end

        function tabObj:AddToggle(text, state, callback)
            local btn = Instance.new("TextButton", tabContent)
            btn.Size = UDim2.new(0.9,0,0,36)
            btn.Position = UDim2.new(0,0,0,36*(#tabContent:GetChildren()))
            btn.BackgroundColor3 = Syrex.Theme.Section
            btn.Font = Enum.Font.SourceSansBold
            btn.TextColor3 = Syrex.Theme.Text
            btn.TextSize = 18
            btn.Text = text .. ": " .. (state and "ON" or "OFF")
            Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)
            local toggleState = state
            btn.MouseButton1Click:Connect(function()
                toggleState = not toggleState
                btn.Text = text .. ": " .. (toggleState and "ON" or "OFF")
                callback(toggleState)
            end)
            return btn
        end

        function tabObj:AddSlider(text, min, max, default, callback)
            local SliderFrame = Instance.new("Frame", tabContent)
            SliderFrame.Size = UDim2.new(0.9,0,0,32)
            SliderFrame.Position = UDim2.new(0,0,0,36*(#tabContent:GetChildren()))
            SliderFrame.BackgroundTransparency = 1

            local Bar = Instance.new("Frame", SliderFrame)
            Bar.Size = UDim2.new(1,0,0,8)
            Bar.Position = UDim2.new(0,0,0.5,-4)
            Bar.BackgroundColor3 = Syrex.Theme.Section
            Instance.new("UICorner", Bar).CornerRadius = UDim.new(1,0)

            local Fill = Instance.new("Frame", Bar)
            Fill.Size = UDim2.new((default-min)/(max-min),0,1,0)
            Fill.BackgroundColor3 = Syrex.Theme.Element
            Instance.new("UICorner", Fill).CornerRadius = UDim.new(1,0)

            local ValueLabel = Instance.new("TextLabel", SliderFrame)
            ValueLabel.Position = UDim2.new(1, -50, 0, -4)
            ValueLabel.Size = UDim2.new(0,50,1,0)
            ValueLabel.BackgroundTransparency = 1
            ValueLabel.TextColor3 = Syrex.Theme.Text
            ValueLabel.Font = Enum.Font.SourceSansBold
            ValueLabel.TextSize = 14
            ValueLabel.Text = tostring(default)

            local dragging = false
            Bar.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = true
                end
            end)
            Bar.InputEnded:Connect(function(input)
                dragging = false
            end)
            UserInputService.InputChanged:Connect(function(input)
                if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                    local relX = math.clamp((input.Position.X - Bar.AbsolutePosition.X) / Bar.AbsoluteSize.X, 0, 1)
                    Fill.Size = UDim2.new(relX,0,1,0)
                    local val = math.floor(min + relX*(max-min))
                    ValueLabel.Text = tostring(val)
                    callback(val)
                end
            end)
            return SliderFrame
        end

        function tabObj:createKeybind(text, key, callback)
            UserInputService.InputBegan:Connect(function(input, gp)
                if gp then return end
                if input.KeyCode == key then
                    callback()
                end
            end)
        end

        return tabObj
    end

    return selfWindow
end

return Syrex
