-- Syrex UI Library (Fully Working Old Version)
if game.CoreGui:FindFirstChild("SyrexUILib") then
    game.CoreGui.SyrexUILib:Destroy()
end

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Theme
local Theme = {
    Background = Color3.fromRGB(9,9,13),
    Section = Color3.fromRGB(0,20,40),
    Element = Color3.fromRGB(61,133,224),
    Text = Color3.fromRGB(255,255,255),
}

-- Library table
local SyrexUI = {}
SyrexUI.Tabs = {}

-- Draggable function
local function MakeDraggable(topbar, frame)
    local Dragging, DragInput, DragStart, StartPos
    local function Update(input)
        local Delta = input.Position - DragStart
        local Pos = UDim2.new(
            StartPos.X.Scale,
            StartPos.X.Offset + Delta.X,
            StartPos.Y.Scale,
            StartPos.Y.Offset + Delta.Y
        )
        TweenService:Create(frame, TweenInfo.new(0.12), {Position = Pos}):Play()
    end
    topbar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            Dragging = true
            DragStart = input.Position
            StartPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    Dragging = false
                end
            end)
        end
    end)
    topbar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            DragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == DragInput and Dragging then
            Update(input)
        end
    end)
end

-- ScreenGui
local Gui = Instance.new("ScreenGui")
Gui.Name = "SyrexUILib"
Gui.Parent = CoreGui
Gui.ResetOnSpawn = false

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0,520,0,340)
MainFrame.Position = UDim2.new(0.5,-260,0.5,-170)
MainFrame.BackgroundColor3 = Theme.Background
MainFrame.Active = true
MainFrame.Parent = Gui
Instance.new("UICorner", MainFrame).CornerRadius = UDim.new(0,6)

-- Floating Tab Frame
local TabFrame = Instance.new("Frame")
TabFrame.Size = UDim2.new(0,100,0,340)
TabFrame.Position = UDim2.new(0.5,-370,0.5,-170)
TabFrame.BackgroundColor3 = Theme.Background
TabFrame.Parent = Gui
Instance.new("UICorner", TabFrame).CornerRadius = UDim.new(0,6)

-- Floating tab offset system
local independent = false
local defaultOffset = Vector2.new(-110,0)
local function getOffset()
    return Vector2.new(
        TabFrame.AbsolutePosition.X - MainFrame.AbsolutePosition.X,
        TabFrame.AbsolutePosition.Y - MainFrame.AbsolutePosition.Y
    )
end
local tabOffset = getOffset()
RunService.RenderStepped:Connect(function()
    if not independent then
        local newPos = Vector2.new(MainFrame.AbsolutePosition.X + tabOffset.X, MainFrame.AbsolutePosition.Y + tabOffset.Y)
        TabFrame.Position = UDim2.fromOffset(newPos.X, newPos.Y)
    end
end)
TabFrame:GetPropertyChangedSignal("Position"):Connect(function()
    if independent then tabOffset = getOffset() end
end)
TabFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        independent = true
    end
end)
local lastClick = 0
TabFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        local now = tick()
        if now - lastClick < 0.3 then
            independent = false
            tabOffset = defaultOffset
        end
        lastClick = now
    end
end)

-- Top Bar
local TopBar = Instance.new("Frame", MainFrame)
TopBar.Size = UDim2.new(1,0,0,34)
TopBar.BackgroundTransparency = 1

local Title = Instance.new("TextLabel", TopBar)
Title.Size = UDim2.new(1,-80,1,0)
Title.Position = UDim2.new(0,12,0,0)
Title.BackgroundTransparency = 1
Title.Font = Enum.Font.FredokaOne
Title.Text = "Syrex UI Library"
Title.TextColor3 = Theme.Text
Title.TextSize = 20
Title.TextXAlignment = Enum.TextXAlignment.Left

local CloseBtn = Instance.new("TextButton", TopBar)
CloseBtn.Size = UDim2.new(0,60,0,24)
CloseBtn.Position = UDim2.new(1,-70,0,5)
CloseBtn.BackgroundColor3 = Theme.Section
CloseBtn.Text = "Close"
CloseBtn.Font = Enum.Font.SourceSansBold
CloseBtn.TextColor3 = Theme.Text
CloseBtn.TextSize = 14
Instance.new("UICorner", CloseBtn).CornerRadius = UDim.new(0,6)

local MinBtn = Instance.new("TextButton", TopBar)
MinBtn.Size = UDim2.new(0,40,0,24)
MinBtn.Position = UDim2.new(1,-120,0,5)
MinBtn.BackgroundColor3 = Theme.Section
MinBtn.Text = "-"
MinBtn.Font = Enum.Font.SourceSansBold
MinBtn.TextColor3 = Theme.Text
MinBtn.TextSize = 18
Instance.new("UICorner", MinBtn).CornerRadius = UDim.new(0,6)

-- Content frames
local ContentFrames = {}

-- Make draggable
MakeDraggable(TopBar, MainFrame)
MakeDraggable(TabFrame, TabFrame)

-- Close / Minimize
local minimized = false
CloseBtn.MouseButton1Click:Connect(function()
    Gui.Enabled = false
end)
MinBtn.MouseButton1Click:Connect(function()
    minimized = not minimized
    for _,frame in pairs(ContentFrames) do
        frame.Visible = not minimized
    end
    MainFrame.Size = minimized and UDim2.new(0,260,0,34) or UDim2.new(0,520,0,340)
end)

-- Toggle UI with keybind
local Settings = {CloseBind = Enum.KeyCode.RightControl}
UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Settings.CloseBind then
        Gui.Enabled = not Gui.Enabled
    end
end)

-- ========== SYREX UI LIBRARY FUNCTIONS ==========
function SyrexUI:CreateWindow(title)
    Title.Text = title or "Syrex UI Library"
    return {}
end

function SyrexUI:CreateTab(name)
    local tabButton = Instance.new("TextButton", TabFrame)
    tabButton.Size = UDim2.new(1,-10,0,40)
    tabButton.Position = UDim2.new(0,5,#TabFrame:GetChildren()*50,20)
    tabButton.BackgroundColor3 = Theme.Section
    tabButton.Text = name
    tabButton.Font = Enum.Font.SourceSansBold
    tabButton.TextColor3 = Theme.Text
    tabButton.TextSize = 16
    Instance.new("UICorner", tabButton).CornerRadius = UDim.new(0,6)

    local tabContent = Instance.new("Frame", MainFrame)
    tabContent.Size = UDim2.new(1,-24,1,-56)
    tabContent.Position = UDim2.new(0,12,0,44)
    tabContent.BackgroundTransparency = 1
    tabContent.Visible = false

    table.insert(ContentFrames, tabContent)

    tabButton.MouseButton1Click:Connect(function()
        for _,frame in pairs(ContentFrames) do frame.Visible = false end
        tabContent.Visible = true
        for _,tb in pairs(TabFrame:GetChildren()) do
            if tb:IsA("TextButton") then
                tb.BackgroundColor3 = Theme.Section
            end
        end
        tabButton.BackgroundColor3 = Theme.Element
    end)

    if #ContentFrames == 1 then
        tabContent.Visible = true
        tabButton.BackgroundColor3 = Theme.Element
    end

    local tabObj = {Content=tabContent}
    return setmetatable(tabObj,{
        __index = {
            AddButton=function(self,text,callback)
                local btn = Instance.new("TextButton", self.Content)
                btn.Size = UDim2.new(0.9,0,0,36)
                btn.Position = UDim2.new(0,0,0,#self.Content:GetChildren()*40)
                btn.BackgroundColor3 = Theme.Section
                btn.Font = Enum.Font.SourceSansBold
                btn.TextColor3 = Theme.Text
                btn.TextSize = 18
                btn.Text = text
                Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)
                btn.MouseButton1Click:Connect(callback)
            end,
            AddToggle=function(self,text,state,callback)
                local toggle = Instance.new("TextButton", self.Content)
                toggle.Size = UDim2.new(0.9,0,0,36)
                toggle.Position = UDim2.new(0,0,0,#self.Content:GetChildren()*40)
                toggle.BackgroundColor3 = Theme.Section
                toggle.Font = Enum.Font.SourceSansBold
                toggle.TextColor3 = Theme.Text
                toggle.TextSize = 18
                toggle.Text = text.." : OFF"
                Instance.new("UICorner", toggle).CornerRadius = UDim.new(0,6)
                local enabled = state
                toggle.MouseButton1Click:Connect(function()
                    enabled = not enabled
                    toggle.Text = text.." : "..(enabled and "ON" or "OFF")
                    toggle.BackgroundColor3 = enabled and Theme.Element or Theme.Section
                    callback(enabled)
                end)
            end,
            AddSlider=function(self,text,min,max,default,callback)
                local frame = Instance.new("Frame", self.Content)
                frame.Size = UDim2.new(0.9,0,0,32)
                frame.Position = UDim2.new(0,0,0,#self.Content:GetChildren()*40)
                frame.BackgroundTransparency = 1

                local bar = Instance.new("Frame", frame)
                bar.Size = UDim2.new(1,0,0,8)
                bar.Position = UDim2.new(0,0,0.5,-4)
                bar.BackgroundColor3 = Theme.Section
                Instance.new("UICorner", bar).CornerRadius = UDim.new(1,0)

                local fill = Instance.new("Frame", bar)
                fill.Size = UDim2.new((default-min)/(max-min),0,1,0)
                fill.BackgroundColor3 = Theme.Element
                Instance.new("UICorner", fill).CornerRadius = UDim.new(1,0)

                local valueLabel = Instance.new("TextLabel", frame)
                valueLabel.Position = UDim2.new(1,-50,0,-4)
                valueLabel.Size = UDim2.new(0,50,1,0)
                valueLabel.BackgroundTransparency = 1
                valueLabel.TextColor3 = Theme.Text
                valueLabel.Font = Enum.Font.SourceSansBold
                valueLabel.TextSize = 14
                valueLabel.Text = tostring(default)

                local dragging = false
                bar.InputBegan:Connect(function(input)
                    if input.UserInputType==Enum.UserInputType.MouseButton1 or input.UserInputType==Enum.UserInputType.Touch then
                        dragging=true
                    end
                end)
                bar.InputEnded:Connect(function(input)
                    dragging=false
                end)
                UserInputService.InputChanged:Connect(function(input)
                    if dragging and (input.UserInputType==Enum.UserInputType.MouseMovement or input.UserInputType==Enum.UserInputType.Touch) then
                        local relX = math.clamp((input.Position.X-bar.AbsolutePosition.X)/bar.AbsoluteSize.X,0,1)
                        fill.Size = UDim2.new(relX,0,1,0)
                        local val = math.floor(min + relX*(max-min))
                        valueLabel.Text = tostring(val)
                        callback(val)
                    end
                end)
            end,
            createKeybind=function(self,text,key,callback)
                UserInputService.InputBegan:Connect(function(input, gp)
                    if gp then return end
                    if input.KeyCode==key then
                        callback()
                    end
                end)
            end
        }
    })
end

return SyrexUI
