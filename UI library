-- SyrexUI Libraryh
local SyrexUI = {}
SyrexUI.__index = SyrexUI

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Theme
SyrexUI.Theme = {
    Background = Color3.fromRGB(9,9,13),
    Section = Color3.fromRGB(0,20,40),
    Element = Color3.fromRGB(61,133,224),
    Text = Color3.fromRGB(255,255,255),
}

-- ScreenGui
local Gui = Instance.new("ScreenGui")
Gui.Name = "SyrexUILib"
Gui.Parent = CoreGui
Gui.ResetOnSpawn = false

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0,520,0,340)
MainFrame.Position = UDim2.new(0.5,-260,0.5,-170)
MainFrame.BackgroundColor3 = SyrexUI.Theme.Background
MainFrame.Active = true
MainFrame.Parent = Gui
Instance.new("UICorner", MainFrame).CornerRadius = UDim.new(0,6)

-- Top Bar + Draggable
local TopBar = Instance.new("Frame", MainFrame)
TopBar.Size = UDim2.new(1,0,0,34)
TopBar.BackgroundTransparency = 1

local Title = Instance.new("TextLabel", TopBar)
Title.Size = UDim2.new(1,-80,1,0)
Title.Position = UDim2.new(0,12,0,0)
Title.BackgroundTransparency = 1
Title.Font = Enum.Font.FredokaOne
Title.Text = "Syrex UI Library"
Title.TextColor3 = SyrexUI.Theme.Text
Title.TextSize = 20
Title.TextXAlignment = Enum.TextXAlignment.Left

-- Close Button
local CloseBtn = Instance.new("TextButton", TopBar)
CloseBtn.Size = UDim2.new(0,60,0,24)
CloseBtn.Position = UDim2.new(1,-70,0,5)
CloseBtn.BackgroundColor3 = SyrexUI.Theme.Section
CloseBtn.Text = "Close"
CloseBtn.Font = Enum.Font.SourceSansBold
CloseBtn.TextColor3 = SyrexUI.Theme.Text
CloseBtn.TextSize = 14
Instance.new("UICorner", CloseBtn).CornerRadius = UDim.new(0,6)

CloseBtn.MouseButton1Click:Connect(function()
    Gui.Enabled = false
end)

-- Make Draggable
local function MakeDraggable(topbar, frame)
    local Dragging, DragInput, DragStart, StartPos
    local function Update(input)
        local Delta = input.Position - DragStart
        frame.Position = UDim2.new(
            StartPos.X.Scale, StartPos.X.Offset + Delta.X,
            StartPos.Y.Scale, StartPos.Y.Offset + Delta.Y
        )
    end
    topbar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            Dragging = true
            DragStart = input.Position
            StartPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    Dragging = false
                end
            end)
        end
    end)
    topbar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            DragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == DragInput and Dragging then
            Update(input)
        end
    end)
end

MakeDraggable(TopBar, MainFrame)

-- Tab system
SyrexUI.Tabs = {}
local TabButtonsFrame = Instance.new("Frame", MainFrame)
TabButtonsFrame.Size = UDim2.new(0,100,1,0)
TabButtonsFrame.Position = UDim2.new(0,0,0,34)
TabButtonsFrame.BackgroundColor3 = SyrexUI.Theme.Background

local ContentHolder = Instance.new("Frame", MainFrame)
ContentHolder.Size = UDim2.new(1,-100,1,-34)
ContentHolder.Position = UDim2.new(0,100,0,34)
ContentHolder.BackgroundTransparency = 1

-- Create Tab
function SyrexUI:CreateTab(name)
    local tab = {}
    tab.Name = name
    tab.Button = Instance.new("TextButton", TabButtonsFrame)
    tab.Button.Size = UDim2.new(1,-10,0,40)
    tab.Button.Position = UDim2.new(0,5,0,#self.Tabs*50 + 10)
    tab.Button.BackgroundColor3 = SyrexUI.Theme.Section
    tab.Button.Font = Enum.Font.SourceSansBold
    tab.Button.TextColor3 = SyrexUI.Theme.Text
    tab.Button.TextSize = 16
    tab.Button.Text = name
    Instance.new("UICorner", tab.Button).CornerRadius = UDim.new(0,6)
    
    tab.Content = Instance.new("Frame", ContentHolder)
    tab.Content.Size = UDim2.new(1,0,1,0)
    tab.Content.BackgroundTransparency = 1
    tab.Content.Visible = false

    tab.Button.MouseButton1Click:Connect(function()
        for _, t in pairs(self.Tabs) do
            t.Content.Visible = false
            t.Button.BackgroundColor3 = SyrexUI.Theme.Section
        end
        tab.Content.Visible = true
        tab.Button.BackgroundColor3 = SyrexUI.Theme.Element
    end)

    table.insert(self.Tabs, tab)
    if #self.Tabs == 1 then
        tab.Button.BackgroundColor3 = SyrexUI.Theme.Element
        tab.Content.Visible = true
    end
    return tab
end

-- Add Button
function SyrexUI:AddButton(tab, text, callback)
    local btn = Instance.new("TextButton", tab.Content)
    btn.Size = UDim2.new(0.9,0,0,36)
    btn.Position = UDim2.new(0,0,0,#tab.Content:GetChildren()*40)
    btn.BackgroundColor3 = SyrexUI.Theme.Section
    btn.Font = Enum.Font.SourceSansBold
    btn.TextColor3 = SyrexUI.Theme.Text
    btn.TextSize = 18
    btn.Text = text
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)
    btn.MouseButton1Click:Connect(callback)
end

-- Add Toggle
function SyrexUI:AddToggle(tab, text, default, callback)
    local toggled = default or false
    local btn = Instance.new("TextButton", tab.Content)
    btn.Size = UDim2.new(0.9,0,0,36)
    btn.Position = UDim2.new(0,0,0,#tab.Content:GetChildren()*40)
    btn.BackgroundColor3 = SyrexUI.Theme.Section
    btn.Font = Enum.Font.SourceSansBold
    btn.TextColor3 = SyrexUI.Theme.Text
    btn.TextSize = 18
    btn.Text = text .. ": " .. (toggled and "ON" or "OFF")
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)
    
    btn.MouseButton1Click:Connect(function()
        toggled = not toggled
        btn.Text = text .. ": " .. (toggled and "ON" or "OFF")
        callback(toggled)
    end)
end

-- Add Slider
function SyrexUI:AddSlider(tab, text, min, max, default, callback)
    local frame = Instance.new("Frame", tab.Content)
    frame.Size = UDim2.new(0.9,0,0,36)
    frame.Position = UDim2.new(0,0,0,#tab.Content:GetChildren()*40)
    frame.BackgroundColor3 = SyrexUI.Theme.Section
    Instance.new("UICorner", frame).CornerRadius = UDim.new(0,6)

    local label = Instance.new("TextLabel", frame)
    label.Size = UDim2.new(1,-50,1,0)
    label.Position = UDim2.new(0,4,0,0)
    label.BackgroundTransparency = 1
    label.TextColor3 = SyrexUI.Theme.Text
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 16
    label.Text = text

    local valueLabel = Instance.new("TextLabel", frame)
    valueLabel.Size = UDim2.new(0,50,1,0)
    valueLabel.Position = UDim2.new(1,-50,0,0)
    valueLabel.BackgroundTransparency = 1
    valueLabel.TextColor3 = SyrexUI.Theme.Text
    valueLabel.Font = Enum.Font.SourceSansBold
    valueLabel.TextSize = 16
    valueLabel.Text = tostring(default or min)

    local dragging = false
    local bar = Instance.new("Frame", frame)
    bar.Size = UDim2.new(1,0,0,8)
    bar.Position = UDim2.new(0,0,0.5,-4)
    bar.BackgroundColor3 = SyrexUI.Theme.Section
    Instance.new("UICorner", bar).CornerRadius = UDim.new(1,0)

    local fill = Instance.new("Frame", bar)
    fill.Size = UDim2.new(((default or min)-min)/(max-min),0,1,0)
    fill.BackgroundColor3 = SyrexUI.Theme.Element
    Instance.new("UICorner", fill).CornerRadius = UDim.new(1,0)

    bar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
        end
    end)
    bar.InputEnded:Connect(function() dragging = false end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local relX = math.clamp((input.Position.X - bar.AbsolutePosition.X)/bar.AbsoluteSize.X,0,1)
            fill.Size = UDim2.new(relX,0,1,0)
            local val = math.floor(min + relX*(max-min))
            valueLabel.Text = tostring(val)
            callback(val)
        end
    end)
end

return SyrexUI
