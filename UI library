-- Syrex UI Library with Floating Tabs + Tab-level Keybinds

if game.CoreGui:FindFirstChild("SyrexUILib") then
    game.CoreGui.SyrexUILib:Destroy()
end

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Theme
local Theme = {
    Background = Color3.fromRGB(9,9,13),
    Section = Color3.fromRGB(0,20,40),
    Element = Color3.fromRGB(61,133,224),
    Text = Color3.fromRGB(255,255,255),
}

-- Settings
local Settings = {
    CloseBind = Enum.KeyCode.RightControl,
}

-- WalkSpeed
local SpeedEnabled = false
local SpeedValue = 16

-- Draggable function
local function MakeDraggable(topbar, frame)
    local Dragging, DragInput, DragStart, StartPos
    local function Update(input)
        local Delta = input.Position - DragStart
        local Pos = UDim2.new(
            StartPos.X.Scale,
            StartPos.X.Offset + Delta.X,
            StartPos.Y.Scale,
            StartPos.Y.Offset + Delta.Y
        )
        TweenService:Create(frame, TweenInfo.new(0.12), {Position = Pos}):Play()
    end
    topbar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            Dragging = true
            DragStart = input.Position
            StartPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    Dragging = false
                end
            end)
        end
    end)
    topbar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            DragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == DragInput and Dragging then
            Update(input)
        end
    end)
end

-- ScreenGui
local Gui = Instance.new("ScreenGui")
Gui.Name = "SyrexUILib"
Gui.Parent = CoreGui
Gui.ResetOnSpawn = false

-- Main GUI
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 520, 0, 340)
MainFrame.Position = UDim2.new(0.5, -260, 0.5, -170)
MainFrame.BackgroundColor3 = Theme.Background
MainFrame.Active = true
MainFrame.Parent = Gui
Instance.new("UICorner", MainFrame).CornerRadius = UDim.new(0,6)

-- Tab Frame
local TabFrame = Instance.new("Frame")
TabFrame.Size = UDim2.new(0, 100, 0, 340)
TabFrame.Position = UDim2.new(0.5, -370, 0.5, -170)
TabFrame.BackgroundColor3 = Theme.Background
TabFrame.Parent = Gui
Instance.new("UICorner", TabFrame).CornerRadius = UDim.new(0,6)

-- Floating offset system
local independent = false
local defaultOffset = Vector2.new(-110, 0)
local function getOffset()
    return Vector2.new(
        TabFrame.AbsolutePosition.X - MainFrame.AbsolutePosition.X,
        TabFrame.AbsolutePosition.Y - MainFrame.AbsolutePosition.Y
    )
end
local tabOffset = getOffset()

RunService.RenderStepped:Connect(function()
    if not independent then
        local newPos = Vector2.new(
            MainFrame.AbsolutePosition.X + tabOffset.X,
            MainFrame.AbsolutePosition.Y + tabOffset.Y
        )
        TabFrame.Position = UDim2.fromOffset(newPos.X, newPos.Y)
    end
end)

TabFrame:GetPropertyChangedSignal("Position"):Connect(function()
    if independent then
        tabOffset = getOffset()
    end
end)

TabFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        independent = true
    end
end)

local lastClick = 0
TabFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        local now = tick()
        if now - lastClick < 0.3 then
            independent = false
            tabOffset = defaultOffset
        end
        lastClick = now
    end
end)

-- TopBar
local TopBar = Instance.new("Frame", MainFrame)
TopBar.Size = UDim2.new(1,0,0,34)
TopBar.BackgroundTransparency = 1

local Title = Instance.new("TextLabel", TopBar)
Title.Size = UDim2.new(1,-80,1,0)
Title.Position = UDim2.new(0,12,0,0)
Title.BackgroundTransparency = 1
Title.Font = Enum.Font.FredokaOne
Title.Text = "Syrex UI Library"
Title.TextColor3 = Theme.Text
Title.TextSize = 20
Title.TextXAlignment = Enum.TextXAlignment.Left

local CloseBtn = Instance.new("TextButton", TopBar)
CloseBtn.Size = UDim2.new(0,60,0,24)
CloseBtn.Position = UDim2.new(1,-70,0,5)
CloseBtn.BackgroundColor3 = Theme.Section
CloseBtn.Text = "Close"
CloseBtn.Font = Enum.Font.SourceSansBold
CloseBtn.TextColor3 = Theme.Text
CloseBtn.TextSize = 14
Instance.new("UICorner", CloseBtn).CornerRadius = UDim.new(0,6)

local MinBtn = Instance.new("TextButton", TopBar)
MinBtn.Size = UDim2.new(0,40,0,24)
MinBtn.Position = UDim2.new(1,-120,0,5)
MinBtn.BackgroundColor3 = Theme.Section
MinBtn.Text = "-"
MinBtn.Font = Enum.Font.SourceSansBold
MinBtn.TextColor3 = Theme.Text
MinBtn.TextSize = 18
Instance.new("UICorner", MinBtn).CornerRadius = UDim.new(0,6)

-- Content Frames
local Contents = {}
for i=1,2 do
    local frame = Instance.new("Frame", MainFrame)
    frame.Size = UDim2.new(1,-24,1,-56)
    frame.Position = UDim2.new(0,12,0,44)
    frame.BackgroundTransparency = 1
    frame.Visible = (i==1)
    table.insert(Contents, frame)
end

-- Tab Buttons
local Tabs = {}
for i=1,2 do
    local btn = Instance.new("TextButton", TabFrame)
    btn.Size = UDim2.new(1,-10,0,40)
    btn.Position = UDim2.new(0,5,0,20 + (i-1)*50)
    btn.BackgroundColor3 = Theme.Section
    btn.Font = Enum.Font.SourceSansBold
    btn.TextColor3 = Theme.Text
    btn.TextSize = 16
    btn.Text = "Tab "..i
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)
    btn.MouseButton1Click:Connect(function()
        for j,frame in ipairs(Contents) do
            frame.Visible = (i==j)
        end
        for _,b in ipairs(TabFrame:GetChildren()) do
            if b:IsA("TextButton") then
                b.BackgroundColor3 = (b==btn) and Theme.Element or Theme.Section
            end
        end
    end)
    if i==1 then btn.BackgroundColor3 = Theme.Element end
    table.insert(Tabs, {Button=btn, Content=Contents[i], Keybinds={}})
end

-- Feature functions
local function createButton(parent, text, callback)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(0.9,0,0,36)
    btn.Position = UDim2.new(0,0,0,#parent:GetChildren()*40)
    btn.BackgroundColor3 = Theme.Section
    btn.Font = Enum.Font.SourceSansBold
    btn.TextColor3 = Theme.Text
    btn.TextSize = 18
    btn.Text = text
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)
    btn.MouseButton1Click:Connect(callback)
end

local function createToggle(parent, text, default, callback)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(0.9,0,0,36)
    btn.Position = UDim2.new(0,0,0,#parent:GetChildren()*40)
    btn.BackgroundColor3 = default and Theme.Element or Theme.Section
    btn.Font = Enum.Font.SourceSansBold
    btn.TextColor3 = Theme.Text
    btn.TextSize = 18
    btn.Text = text..": "..(default and "ON" or "OFF")
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)
    local state = default
    btn.MouseButton1Click:Connect(function()
        state = not state
        btn.BackgroundColor3 = state and Theme.Element or Theme.Section
        btn.Text = text..": "..(state and "ON" or "OFF")
        callback(state)
    end)
end

local function createKeybind(tab, text, defaultKey, callback)
    local parent = tab.Content
    local frame = Instance.new("Frame", parent)
    frame.Size = UDim2.new(0.9,0,0,36)
    frame.Position = UDim2.new(0,0,0,#parent:GetChildren()*40)
    frame.BackgroundTransparency = 1

    local label = Instance.new("TextLabel", frame)
    label.Size = UDim2.new(0.6,0,1,0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Theme.Text
    label.Font = Enum.Font.SourceSans
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Text = text..": "..tostring(defaultKey)

    local btn = Instance.new("TextButton", frame)
    btn.Size = UDim2.new(0.36,0,1,0)
    btn.Position = UDim2.new(0.62,0,0,0)
    btn.BackgroundColor3 = Theme.Element
    btn.Text = "Set Key"
    btn.TextColor3 = Theme.Text
    btn.Font = Enum.Font.SourceSansBold
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)

    local Key = defaultKey

    btn.MouseButton1Click:Connect(function()
        btn.Text = "Press a key..."
        local conn
        conn = UserInputService.InputBegan:Connect(function(input, gp)
            if gp then return end
            if input.UserInputType==Enum.UserInputType.Keyboard then
                Key = input.KeyCode
                label.Text = text..": "..tostring(Key)
                btn.Text = "Set Key"
                conn:Disconnect()
            end
        end)
        delay(8,function() if conn and conn.Connected then conn:Disconnect(); btn.Text="Set Key" end end)
    end)

    -- Listen for key
    UserInputService.InputBegan:Connect(function(input, gp)
        if gp then return end
        if input.KeyCode == Key then
            callback()
        end
    end)
end

-- Example usage for Tab1
local Tab1 = Tabs[1]
createButton(Tab1.Content, "Load Infinite Yield", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)
createToggle(Tab1.Content, "WalkSpeed", false, function(state)
    SpeedEnabled = state
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
        LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = state and SpeedValue or 16
    end
end)
createKeybind(Tab1, "Test Feature", Enum.KeyCode.F, function()
    print("Tab1 feature key pressed!")
end)

-- GUI toggle (always works)
UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Settings.CloseBind then
        Gui.Enabled = not Gui.Enabled
    end
end)

-- Close / Minimize
CloseBtn.MouseButton1Click:Connect(function()
    Gui.Enabled = false
end)
MinBtn.MouseButton1Click:Connect(function()
    for _,c in ipairs(Contents) do c.Visible = not c.Visible end
    MainFrame.Size = MainFrame.Size == UDim2.new(0,520,0,340) and UDim2.new(0,260,0,34) or UDim2.new(0,520,0,340)
end)

-- Make draggable
MakeDraggable(TopBar, MainFrame)
MakeDraggable(TabFrame, TabFrame)
